// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define the Role table
model Role {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  users       User[]
}

// Define the User table
model User {
  id            String         @id
  firstName     String
  lastName      String
  email         String         @unique
  groups        Group[]        @relation("UserToGroups")
  token         Token[]
  tokenId       Int?           @unique
  role          Role?          @relation(fields: [roleId], references: [id])
  roleId        Int?
  conversations Conversation[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime?      @updatedAt
}

// Define the Group table
model Group {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  area      String?
  users     User[]    @relation("UserToGroups")
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

// Define the Token table
model Token {
  id            Int       @id @default(autoincrement())
  amount        Int
  currentAmount Int
  expiresAt     DateTime
  user          User      @relation(fields: [userId], references: [id])
  userId        String    @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
}

// Define the Conversation table with soft delete
model Conversation {
  id         Int       @id @default(autoincrement())
  isDeleted  Boolean   @default(false)
  userId     String
  user       User      @relation(fields: [userId], references: [id])
  language   Language  @relation(fields: [languageId], references: [id])
  languageId Int
  posts      Post[]    @relation("ConversationToPosts")
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
  deletedAt  DateTime?
}

// Define the Post table
model Post {
  id             Int          @id @default(autoincrement())
  content        String
  tokenCost      Int
  conversation   Conversation @relation("ConversationToPosts", fields: [conversationId], references: [id])
  conversationId Int
  createdAt      DateTime     @default(now())
  updatedAt      DateTime?    @updatedAt
}

// Define the Language table with auto-generated ID
model Language {
  id            Int            @id @default(autoincrement())
  name          String         @unique
  conversations Conversation[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime?      @updatedAt
}
